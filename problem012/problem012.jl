# Highly divisible triangular number
# https://projecteuler.net/problem=12
#
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th
# triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, â€¦
#
# Let us list the factors of the first seven triangle numbers:
#
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

using Primes

# See comments in https://stackoverflow.com/q/73988976/12069968
function n_divisors(n::Int)
    # m = isone(n) ? 0 : sum(1 for _ in eachfactor(n)); return m^m + m
    return isone(n) ? 1 : prod(e + 1 for (_p, e) in eachfactor(n))
end

function solve(n::Int = 500)
    i = 1
    while true
        # Calculate the triangle number
        t = sum(1:i)

        # Check if we have found our answer
        if n_divisors(t) > n
            return t
        end

        i += 1
    end
end

function main()
    solution = solve()
    @assert solve(5) == 28
    println("Problem 12 solution: $solution")
end

main()
